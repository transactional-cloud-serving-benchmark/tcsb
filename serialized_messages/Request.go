// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package serialized_messages

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type Request struct {
	_tab flatbuffers.Table
}

func GetRootAsRequest(buf []byte, offset flatbuffers.UOffsetT) *Request {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &Request{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *Request) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Request) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *Request) RequestUnionType() RequestUnion {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return RequestUnion(rcv._tab.GetByte(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *Request) MutateRequestUnionType(n RequestUnion) bool {
	return rcv._tab.MutateByteSlot(4, byte(n))
}

func (rcv *Request) RequestUnion(obj *flatbuffers.Table) bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		rcv._tab.Union(obj, o)
		return true
	}
	return false
}

func RequestStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func RequestAddRequestUnionType(builder *flatbuffers.Builder, requestUnionType RequestUnion) {
	builder.PrependByteSlot(0, byte(requestUnionType), 0)
}
func RequestAddRequestUnion(builder *flatbuffers.Builder, requestUnion flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(requestUnion), 0)
}
func RequestEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
